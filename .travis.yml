# This is a special configuration file to run tests on Travis-CI via
# GitHub notifications when changes are committed.
#
# See http://travis-ci.org/ for details


# We need Python 2.6 or 2.7 to run Galaxy (and some of the wrappers)
# but don't really care which. We also need Java to run some tools,
# and perhaps the simplest way to get that installed to to run this
# entire TravisCI build as "java" (which will still have a system
# python installed).
#
language: java

# Installing Galaxy
# =================
#
# Before installing our Galaxy wrappers, we need to install Galaxy.
# That may mean using hg to clone it from BitBucket, but too slow?
#
# $ time hg clone https://bitbucket.org/galaxy/galaxy-dist
# ...
# 3m14s
#
# Could use wget to just grab the a specific branch/revision?
#
# $ time wget https://bitbucket.org/galaxy/galaxy-dist/get/stable.tar.bz2
# ...
# 1m33s
#
# We can do better using a GitHub mirror, such as John Chilton's
#
# $ time git clone https://github.com/jmchilton/galaxy-central.git
# ...
# 44s
#
# But better yet seems to be a tar-ball from the GitHub mirror,
#
# $ time wget https://github.com/jmchilton/galaxy-central/archive/master.tar.gz
# ...
# 22s
#
# Note it redirects so wget downloads the tar-ball as a file just called master,
# https://codeload.github.com/jmchilton/galaxy-central/tar.gz/master
#
# However, we might want to focus on the stable release branch?
#
#
# Installing Tool Dependencies
# ============================
#
# We grab Galaxy, and will later make configuration changes specifically
# for testing our tools. Otherwise we use the default settings such as
# running with an SQLite database.
#
# We also need to install our tool dependencies, e.g. NCBI BLAST+ binaries,
# which we will do manually rather than via a (local) Galaxy Tool Shed.
#

before_install:
 - mkdir "$HOME/.python-eggs"
 - chmod 700 "$HOME/.python-eggs" 
 - echo "Installing Biopython for system Python..."
 - sudo apt-get install python-biopython
 - echo "Downloading and compiling nlstradamus..."
 - cd ${TRAVIS_BUILD_DIR}
 - mkdir nlstradamus && cd nlstradamus
 - wget http://www.moseslab.csb.utoronto.ca/NLStradamus/NLStradamus/NLStradamus.1.8.tar.gz
 - tar -zxvf NLStradamus.1.8.tar.gz
 - g++ NLStradamus.cpp -o NLStradamus -O3
 - export PATH=$PWD:$PATH
 - echo "Downloading and setting up clinod..."
 - cd ${TRAVIS_BUILD_DIR}
 - mkdir clinod && cd clinod
 - export CLINOD=$PWD
 - wget http://www.ra.cs.uni-tuebingen.de/downloads/SNNS/SNNSv4.3.tar.gz
 - tar -zxvf SNNSv4.3.tar.gz
 - mv SNNSv4.3/tools/bin/x86_64-pc-unknown-linux-gnuoldld/batchman $CLINOD/
 - wget http://www.compbio.dundee.ac.uk/nod/downloads/clinod-1.3.jar
 - echo "Downloading and setting up EffectiveT3..."
 - cd ${TRAVIS_BUILD_DIR}
 - mkdir effectiveT3 && cd effectiveT3
 - export EFFECTIVET3=$PWD
 - wget http://effectors.org/download/version/TTSS_GUI-1.0.1.jar
 - mkdir module && cd module
 - wget http://effectors.org/download/module/TTSS_ANIMAL-1.0.1.jar
 - wget http://effectors.org/download/module/TTSS_PLANT-1.0.1.jar
 - wget http://effectors.org/download/module/TTSS_STD-1.0.1.jar
 - echo "Downloading and setting up MIRA4..."
 - cd ${TRAVIS_BUILD_DIR}
 - wget https://downloads.sourceforge.net/project/mira-assembler/MIRA/stable/mira_4.0rc4_linux-gnu_x86_64_static.tar.bz2
 - tar -jxvf mira_4.0rc4_linux-gnu_x86_64_static.tar.bz2
 - export MIRA4=$PWD/mira_4.0rc4_linux-gnu_x86_64_static/bin
 - echo "Installing samtools..."
 - sudo apt-get install samtools
 - echo "Fetching Galaxy..."
 - cd ${TRAVIS_BUILD_DIR}
 - wget https://codeload.github.com/jmchilton/galaxy-central/tar.gz/tool_test
 - tar -zxvf tool_test | tail
 - cd galaxy-central-tool_test
 - sudo apt-get install python-pip
 - sudo pip install requests  # Needed for twill-less tool tests for now.

# Configuring tools within Galaxy
# ===============================
#
# We setup a minimal tool_conf.xml and/or tool_conf.xml.sample file to
# get Galaxy to just test our tools, rather than via a (local) Galaxy
# Tool Shed.
#
# TODO - GALAXY_TEST_TOOL_CONF environment variable rather than symlink?
#
# We setup our tools under the Galaxy tool folder by using symlinks.
# TODO - Restructure this to auto-update in future when add folders?
#
# We setup our datatypes by adding blast.py to the Galaxy library, and
# adding the insert into lib/galaxy/datatypes/registry.py, and replacing
# the datatypes_conf.xml file.
#
# We setup our sample data in the Galaxy test-data folder by copying them
# (using symlinks might be faster?)
#
# We setup out sample *.loc files in the Galaxy tool-data folder by copying
# them (using symlinks might be faster?)
#
# We then want to use run.sh to setup all the sample files, fetch eggs etc,
# but not actually start running Galaxy. One way to do this is by calling
# "./run.sh --stop-daemon" but must override its error level 1 return value.
#

install:
 - export GALAXY_TEST_DB_TEMPLATE=https://github.com/jmchilton/galaxy-downloads/raw/master/db_gx_rev_0117.sqlite
 - export GALAXY_TEST_DEFAULT_INTERACTOR='twill'
 - ln -s ${TRAVIS_BUILD_DIR}/.travis.tool_conf.xml tool_conf.xml
 - rm tool_conf.xml.sample
 - ln -s ${TRAVIS_BUILD_DIR}/.travis.tool_conf.xml tool_conf.xml.sample
 - ln -s ${TRAVIS_BUILD_DIR}/tools/clinod/ tools/clinod
 - ln -s ${TRAVIS_BUILD_DIR}/tools/effectiveT3/ tools/effectiveT3
 - ln -s ${TRAVIS_BUILD_DIR}/tools/mira3/ tools/mira3
 - ln -s ${TRAVIS_BUILD_DIR}/tools/mira4/ tools/mira4
 - ln -s ${TRAVIS_BUILD_DIR}/tools/nlstradamus/ tools/nlstradamus
 - ln -s ${TRAVIS_BUILD_DIR}/tools/seq_primer_clip/ tools/seq_primer_clip
 - ln -s ${TRAVIS_BUILD_DIR}/tools/predictnls/ tools/predictnls
 - ln -s ${TRAVIS_BUILD_DIR}/tools/protein_analysis/ tools/protein_analysis
 - ln -s ${TRAVIS_BUILD_DIR}/tools/fastq_paired_unpaired/ tools/fastq_paired_unpaired
 - ln -s ${TRAVIS_BUILD_DIR}/tools/venn_list/ tools/venn_list
 - ln -s ${TRAVIS_BUILD_DIR}/tools/chromosome_diagram/ tools/chromosome_diagram
 - ln -s ${TRAVIS_BUILD_DIR}/tools/seq_rename/ tools/seq_rename
 - ln -s ${TRAVIS_BUILD_DIR}/tools/seq_filter_by_id/ tools/seq_filter_by_id
 - ln -s ${TRAVIS_BUILD_DIR}/tools/seq_select_by_id/ tools/seq_select_by_id
 - ln -s ${TRAVIS_BUILD_DIR}/tools/get_orfs_or_cdss/ tools/get_orfs_or_cdss
 - ln -s ${TRAVIS_BUILD_DIR}/tools/samtools_idxstats/ tools/samtools_idxstats
 - ln -s ${TRAVIS_BUILD_DIR}/datatypes/mira_datatypes/mira.py lib/galaxy/datatypes/mira.py
 - sed -i '6 i import mira' lib/galaxy/datatypes/registry.py
 - ln -s ${TRAVIS_BUILD_DIR}/.travis.datatypes_conf.xml datatypes_conf.xml
 - cp ${TRAVIS_BUILD_DIR}/test-data/* test-data/
 - cp ${TRAVIS_BUILD_DIR}/tool-data/* tool-data/
 - ./run.sh --stop-daemon || true


# Testing tools in Galaxy
# =======================
#
# Having setup our Galaxy with a minimal tool_conf.xml / tool_conf.xml.sample
# we call run_functional_tests.sh to run just our tests (grouped under a
# common section "travis" in the XML file for this purpose).
#
# ./run_functional_tests.sh -sid Continuous-Integration-Travis
#
# calls:
#
# python ./scripts/functional_tests.py --with-nosehtml --html-report-file run_functional_tests.html -v `python tool_list.py Continuous-Integration-Travis`
#
# That gives an error sadly under Travis,
# functional_tests.py: error: no such option: --with-nosehtml
# And also,
# functional_tests.py: error: no such option: --html-report-file
# Perhaps Galaxy's nose egg isn't being fetched?

script:
 - python ./scripts/functional_tests.py -v `python tool_list.py Continuous-Integration-Travis`

#The email defaults are too talkative while we're getting Travis working nicely.
notifications:
  email: false
